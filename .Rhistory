targets::tar_make()
targets::tar_make()
# Drug episodes for lung
drug_episodes <- prep_episode_data(tumour = "nsclc", treatment = "cisplatin|carboplatin", drug_separator = ",",
overlap_threshold = 1)
drug_transitions <- construct_state_episodes(drug_episodes)$drug_transitions
lines <- construct_state_episodes(drug_episodes)$lines
params_results <- state_exit_weibull_estimates(drug_transitions, lines)
View(params_results)
View(drug_episodes)
View(drug_transitions)
View(lines)
get_surv_data("On_Treatment_Target_Line")
get_surv_data <- function(state_filter, join_LoT = FALSE) {
df <- drug_transitions %>%
dplyr::filter(state == state_filter) %>%
dplyr::mutate(time = as.numeric(lineenddate - linestartdate)) %>%
dplyr::filter(time > 0)
df <- df %>%
dplyr::left_join(
lines %>% dplyr::select(patientid, prior_lines) %>% dplyr::distinct(),
by = "patientid"
)
if (join_LoT) {
LoT_progression <- lines %>%
dplyr::group_by(patientid) %>%
dplyr::mutate(new_line = ifelse(!is.na(next_linestart), "LoT", "clinical")) %>%
dplyr::distinct(patientid, .keep_all = TRUE) %>%
dplyr::select(patientid, new_line)
df <- df %>% dplyr::left_join(LoT_progression, by = "patientid")
}
return(df)
}
get_surv_data("On_Treatment_Target_Line")
library(dplyr)
params_results <- state_exit_weibull_estimates(drug_transitions, lines)
get_surv_data("On_Treatment_Target_Line")
df <- get_surv_data("On_Treatment_Target_Line")
LoT_progression <- lines %>%
dplyr::group_by(patientid) %>%
dplyr::mutate(new_line = ifelse(!is.na(next_linestart), "LoT", "clinical")) %>%
dplyr::distinct(patientid, .keep_all = TRUE) %>%
dplyr::select(patientid, new_line)
df <- df %>% dplyr::left_join(LoT_progression, by = "patientid")
View(LoT_progression)
formula <- if (!is.null(covariates)) {
stats::as.formula(paste("Surv(time, event) ~", paste(covariates, collapse = "+")))
} else {
survival::Surv(time, event) ~ 1
}
covariates = c("prior_lines")
formula <- if (!is.null(covariates)) {
stats::as.formula(paste("Surv(time, event) ~", paste(covariates, collapse = "+")))
} else {
survival::Surv(time, event) ~ 1
}
formula
fit <- tryCatch({
flexsurv::flexsurvreg(formula, data = df, dist = "weibull")
}, error = function(e) NULL)
fit
flexsurv::flexsurvreg(formula, data = df, dist = "weibull")
library(survival)
flexsurv::flexsurvreg(formula, data = df, dist = "weibull")
devtools::document()
devtools::install()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
state_sample_sizes <- state_numbers_summary(drug_transitions)
targets::tar_make()
targets::tar_make()
# Drug episodes for CRC
drug_episodes <- prep_episode_data(tumour = "crc", treatment = "folfiri", drug_separator = ",",
overlap_threshold = 1, exact = TRUE)
library(episodes)
# Drug episodes for CRC
drug_episodes <- prep_episode_data(tumour = "crc", treatment = "folfiri", drug_separator = ",",
overlap_threshold = 1, exact = TRUE)
drug_transitions <- construct_state_episodes(drug_episodes)$drug_transitions
lines <- construct_state_episodes(drug_episodes)$lines
params_results <- state_exit_weibull_estimates(drug_transitions, lines)
params_results
Drug episodes for lung
drug_episodes <- prep_episode_data(tumour = "nsclc", treatment = "cisplatin|carboplatin", drug_separator = ",",
overlap_threshold = 1)
drug_transitions <- construct_state_episodes(drug_episodes)$drug_transitions
lines <- construct_state_episodes(drug_episodes)$lines
params_results <- state_exit_weibull_estimates(drug_transitions, lines)
state_sample_sizes <- state_numbers_summary(drug_transitions)
death_table <- death_table(drug_transitions)
drug_episodes <- prep_episode_data(tumour = "nsclc", treatment = "cisplatin|carboplatin", drug_separator = ",",
overlap_threshold = 1)
targets::tar_make()
warnings()
targets::tar_make()
targets::tar_make()
tar_make(callr_function = NULL)
targets::tar_make(callr_function = NULL)
library(episodes)
targets::tar_make(callr_function = NULL)
targets::tar_make()
devtools::install()
targets::tar_make()
devtools::install()
devtools::install()
devtools::install()
targets::tar_make()
targets::tar_make()
# Drug episodes for lung
drug_episodes <- prep_episode_data(tumour = "nsclc", treatment = "cisplatin|carboplatin", drug_separator = ",",
overlap_threshold = 1)
library(episodes)
# Drug episodes for lung
drug_episodes <- prep_episode_data(tumour = "nsclc", treatment = "cisplatin|carboplatin", drug_separator = ",",
overlap_threshold = 1)
drug_transitions <- construct_state_episodes(drug_episodes)$drug_transitions
lines <- construct_state_episodes(drug_episodes)$lines
params_results <- state_exit_weibull_estimates(drug_transitions, lines)
state_sample_sizes <- state_numbers_summary(drug_transitions)
death_table <- death_table(drug_transitions)
# Load existing workbook (change name here)
wb <- openxlsx::loadWorkbook(glue::glue("H://PREDiCText//nirupama//weibull_estimates//01_public_parameters_updatedNTGC.xlsx"))
# Run function once for ech tumour (this can be looped over)
workbook <- write_shape_scale(wb = wb, params_results = params_results, tumour = "lung", treatment = "cisplatin")
# Run function once for ech tumour (this can be looped over)
workbook <- write_summary(wb = wb, params_results = state_sample_sizes, tumour = "lung", treatment = "cisplatin")
# Run function once for ech tumour (this can be looped over)
workbook <- write_summary(wb = wb, summary_table = state_sample_sizes, tumour = "lung", treatment = "cisplatin")
devtools::install()
library(episodes)
# Run function once for ech tumour (this can be looped over)
workbook <- write_summary(wb = wb, summary_table = state_sample_sizes, tumour = "lung", treatment = "cisplatin")
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "gemcitabine, doectaxel"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, TRUE)
), dir = "YOUR DIRECTORY"
)
library(episodes)
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "gemcitabine, doectaxel"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, TRUE)
), dir = "YOUR DIRECTORY"
)
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "gemcitabine, doectaxel"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, TRUE)
), dir = "H://PREDiCText//nirupama//weibull_estimates"
)
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "gemcitabine, doectaxel"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, TRUE)
), dir = "H://PREDiCText//nirupama//weibull_estimates"
)
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "docetaxel, gemcitabine"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, TRUE)
), dir = "H://PREDiCText//nirupama//weibull_estimates"
)
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "gemcitabine, docetaxel"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, TRUE)
), dir = "YOUR DIRECTORY"
)
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "gemcitabine,docetaxel"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, TRUE)
), dir = "YOUR DIRECTORY"
)
xx <- read.csv("H://PREDiCText//nirupama//weibull_estimates//sarcoma_episodes.csv")
View(xx)
devtools::install()
library(episodes)
prep_episode_data(tumour = "sarcoma", treatment = "docetaxel|gemcitabine", drug_separator = ",",
overlap_threshold = 1)
prep_episode_data(tumour = "sarcoma", treatment = "docetaxel|gemcitabine", drug_separator = ",",
overlap_threshold = 1)
devtools::load_all()
prep_episode_data(tumour = "sarcoma", treatment = "docetaxel|gemcitabine", drug_separator = ",",
overlap_threshold = 1)
library(episodes)
prep_episode_data(tumour = "sarcoma", treatment = "docetaxel|gemcitabine", drug_separator = ",",
overlap_threshold = 1)
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "docetaxel|gemcitabine"),
exact = c(FALSE, TRUE, TRUE, TRUE, FALSE)
), dir = "YOUR DIRECTORY"
)
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "docetaxel|gemcitabine"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, FALSE)
), dir = "YOUR DIRECTORY"
)
prep_episode_data
devtools::install()
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "docetaxel|gemcitabine"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, FALSE)
), dir = "YOUR DIRECTORY"
)
prep_episode_data(tumour = "sarcoma", treatment = "docetaxel|gemcitabine", drug_separator = ",",
overlap_threshold = 1)
prep_episode_data(tumour = "sarcoma", treatment = "docetaxel, gemcitabine", drug_separator = ",",
overlap_threshold = 1)
devtools::load_all()
prep_episode_data(tumour = "sarcoma", treatment = "docetaxel, gemcitabine", drug_separator = ",",
overlap_threshold = 1)
prep_episode_data(tumour = "sarcoma", treatment = "docetaxel,gemcitabine", drug_separator = ",",
overlap_threshold = 1)
devtools::install()
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "docetaxel,gemcitabine"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, FALSE)
), dir = "YOUR DIRECTORY"
)
episodes::run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "docetaxel,gemcitabine"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, FALSE)
), dir = "H://PREDiCText//nirupama//weibull_estimates"
)
drug_episodes <- prep_episode_data(tumour = "sarcoma", treatment = "docetaxel, gemcitabine", drug_separator = ",",
overlap_threshold = 1, exact =  FALSE)
library(episodes)
drug_episodes <- prep_episode_data(tumour = "sarcoma", treatment = "docetaxel, gemcitabine", drug_separator = ",",
overlap_threshold = 1, exact =  FALSE)
drug_episodes <- prep_episode_data(tumour = "sarcoma", treatment = "docetaxel,gemcitabine", drug_separator = ",",
overlap_threshold = 1, exact =  FALSE)
View(drug_episodes)
mortality <- read.table("H://PREDiCText//lingyi//all unzipped round1and4//roche_cg_pan_tumor_enhanced_2024-03-31//Enhanced_Mortality_V2.txt", header = TRUE, sep = "|")
View(mortality)
lab <- read.table("H://PREDiCText//lingyi//all unzipped round1and4//roche_cg_pan_tumor_enhanced_2024-03-31//Lab.txt", header = TRUE, sep = "|")
lab <- read.table("Z:\\PREDiCText\\lingyi\\all unzipped round1and4\\roche_cg_pan_tumor_enhanced_2024-03-31\\Lab.txt")
lab <- read.table("Z:\\PREDiCText\\lingyi\\all unzipped round1and4\\roche_cg_pan_tumor_enhanced_2024-03-31\\Lab.txt", header = TRUE, sep = "|")
lab <- read.table("H:\\PREDiCText\\lingyi\\all unzipped round1and4\\roche_cg_pan_tumor_enhanced_2024-03-31\\Lab.txt",
header = TRUE,
stringsAsFactors = FALSE,
fill = TRUE,
quote = "\"",
sep = "|",
check.names = FALSE)
View(lab)
View(mortality)
tumour_data <- read.csv("H://PREDiCText//nirupama//weibull_estimates//sarcoma_episodes.csv")
View(tumour_data)
tumour_data <- tumour_data %>% left_join(mortality, by = "patientid")
library(tidyverse)
tumour_data <- tumour_data %>% left_join(mortality, by = "patientid")
devtools::load_all()
# Test out sarcoma
drug_episodes <- prep_episode_data(tumour = "sarcoma", treatment = "docetaxel,gemcitabine", drug_separator = ",",
overlap_threshold = 1, exact =  FALSE)\
# Test out sarcoma
drug_episodes <- prep_episode_data(tumour = "sarcoma", treatment = "docetaxel,gemcitabine", drug_separator = ",",
overlap_threshold = 1, exact =  FALSE)
devtools::load_all()
# Test out sarcoma
drug_episodes <- prep_episode_data(tumour = "sarcoma", treatment = "docetaxel,gemcitabine", drug_separator = ",",
overlap_threshold = 1, exact =  FALSE)
View(drug_episodes)
tumour_data <- read.csv("H://PREDiCText//nirupama//weibull_estimates//sarcoma_episodes.csv")
drug_episodes <- tumour_data %>%
tidyr::drop_na(linenumber) %>%
dplyr::group_by(patientid, linenumber) %>%
dplyr::summarise(
linename = dplyr::first(linename),
linestartdate = min(linestartdate),
lineenddate = max(episodedate),
.groups = 'drop'
) %>%
dplyr::distinct() %>%
dplyr::arrange(patientid, linenumber) %>%
dplyr::mutate(
linestartdate = lubridate::ymd(linestartdate),
lineenddate   = lubridate::ymd(lineenddate)
)
View(drug_episodes)
n_adv <- length(unique(drug_episodes$patientid))
message(glue::glue("The total number of {tumour} patients is {n_adv}"))
tumour = "sarcoma"
n_adv <- length(unique(drug_episodes$patientid))
message(glue::glue("The total number of {tumour} patients is {n_adv}"))
ep_patients_first_line <- drug_episodes %>%
dplyr::filter(tolower(linename) == tolower(treatment), linenumber == 1) %>%
dplyr::pull(patientid) %>%
unique()
treatment = "docetaxel, gemcitabine"
ep_patients_first_line <- drug_episodes %>%
dplyr::filter(tolower(linename) == tolower(treatment), linenumber == 1) %>%
dplyr::pull(patientid) %>%
unique()
treatment = "docetaxel,gemcitabine"
ep_patients_first_line <- drug_episodes %>%
dplyr::filter(tolower(linename) == tolower(treatment), linenumber == 1) %>%
dplyr::pull(patientid) %>%
unique()
drug_episodes_first_line <- drug_episodes %>%
dplyr::filter(patientid %in% ep_patients_first_line)
n_first_line <- length(unique(ep_patients_first_line))
message(glue::glue("The total number of {tumour} first-line patients is {n_first_line}"))
ep_patients_second_line <- drug_episodes %>%
dplyr::filter(tolower(linename) == tolower(treatment), linenumber == 2) %>%
dplyr::pull(patientid) %>%
unique()
drug_episodes_second_line <- drug_episodes %>%
dplyr::filter(patientid %in% ep_patients_second_line & !(patientid %in% ep_patients_first_line))
n_second_line <- length(unique(drug_episodes_second_line$patientid))
message(glue::glue("The total number of {tumour} second-line patients is {n_second_line}"))
ep_patients_third_line <- drug_episodes %>%
dplyr::filter(tolower(linename) == tolower(treatment), linenumber == 3) %>%
dplyr::pull(patientid) %>%
unique()
drug_episodes_third_line <- drug_episodes %>%
dplyr::filter(patientid %in% ep_patients_third_line &
!(patientid %in% ep_patients_first_line) &
!(patientid %in% ep_patients_second_line))
n_third_line <- length(unique(drug_episodes_third_line$patientid))
message(glue::glue("The total number of {tumour} third-line patients is {n_third_line}"))
# Summary table
summary_table <- data.frame(
Line_of_Therapy = c("First Line", "Second Line", "Third Line"),
Number_of_Patients = c(n_first_line, n_second_line, n_third_line)
)
print(knitr::kable(summary_table, caption = glue::glue("Number of patients who received {treatment} by line of therapy")))
# Combine all selected episodes
drug_episodes <- dplyr::bind_rows(drug_episodes_first_line, drug_episodes_second_line, drug_episodes_third_line)
# Remove overlapping lines
drug_episodes <- collapse_overlapping_lines(ep_data = drug_episodes)
n_overlap <- length(unique(drug_episodes$patientid))
message(glue::glue("The total number of {tumour} patients with overlapping lines that were filtered out is {n_overlap}"))
# Remove single doses
drug_episodes <- single_dose_clean(ep_data = drug_episodes, drug_separator = drug_separator, overlap_threshold = overlap_threshold)
drug_separator = ","
ovberlap_threshold = 1
overlap_threshold = 1
# Remove single doses
drug_episodes <- single_dose_clean(ep_data = drug_episodes, drug_separator = drug_separator, overlap_threshold = overlap_threshold)
n_single_dose <- length(unique(drug_episodes$patientid))
message(glue::glue("The total number of {tumour} patients with single doses that were filtered out is {n_single_dose}"))
# Tag chemotherapy line
chemo_lines <- drug_episodes %>%
dplyr::filter(stringr::str_detect(tolower(linename), treatment)) %>%
dplyr::group_by(patientid) %>%
dplyr::summarise(chemo_line = min(linenumber), .groups = "drop") %>%
dplyr::filter(chemo_line %in% c(1, 2, 3))
# Add subsequent line
chemo_and_next <- drug_episodes %>%
dplyr::inner_join(chemo_lines, by = "patientid", relationship = "many-to-many") %>%
dplyr::group_by(patientid) %>%
dplyr::filter(linenumber %in% c(chemo_line, chemo_line + 1)) %>%
dplyr::ungroup() %>%
dplyr::arrange(patientid, linenumber) %>%
dplyr::group_by(patientid) %>%
dplyr::mutate(prior_lines = chemo_line - 1)
View(chemo_lines)
View(drug_episodes)
drug_episodes %>%
dplyr::filter(stringr::str_detect(tolower(linename), treatment))
linename
View(drug_episodes)
View(drug_episodes)
treatment
View(drug_episodes)
drug_episodes %>%
dplyr::filter(stringr::str_detect(tolower(linename), treatment))
table(drug_episodes$linename)
drug_episodes %>%
dplyr::filter(stringr::str_detect(tolower(linename), "docetaxel,gemcitabine"))
View(drug_episodes)
devtools::load_all()
devtools::load_all()
# Test out sarcoma
drug_episodes <- prep_episode_data(tumour = "sarcoma", treatment = "docetaxel,gemcitabine", drug_separator = ",",
overlap_threshold = 1, exact =  FALSE)
View(drug_episodes)
tumour_data <- read.csv("H://PREDiCText//nirupama//weibull_estimates//sarcoma_episodes.csv")
drug_episodes <- tumour_data %>%
tidyr::drop_na(linenumber) %>%
dplyr::group_by(patientid, linenumber) %>%
dplyr::summarise(
linename = dplyr::first(linename),
linestartdate = min(linestartdate),
lineenddate = max(episodedate),
.groups = 'drop'
) %>%
dplyr::distinct() %>%
dplyr::arrange(patientid, linenumber) %>%
dplyr::mutate(
linestartdate = lubridate::ymd(linestartdate),
lineenddate   = lubridate::ymd(lineenddate)
)
drug_episodes <- drug_episodes %>%
dplyr::mutate(
linename = gsub(",\\s*", ",", tolower(linename))
)
View(drug_episodes)
ep_patients_first_line <- drug_episodes %>%
dplyr::filter(tolower(linename) == tolower(treatment), linenumber == 1) %>%
dplyr::pull(patientid) %>%
unique()
drug_episodes_first_line <- drug_episodes %>%
dplyr::filter(patientid %in% ep_patients_first_line)
n_first_line <- length(unique(ep_patients_first_line))
message(glue::glue("The total number of {tumour} first-line patients is {n_first_line}"))
ep_patients_second_line <- drug_episodes %>%
dplyr::filter(tolower(linename) == tolower(treatment), linenumber == 2) %>%
dplyr::pull(patientid) %>%
unique()
drug_episodes_second_line <- drug_episodes %>%
dplyr::filter(patientid %in% ep_patients_second_line & !(patientid %in% ep_patients_first_line))
n_second_line <- length(unique(drug_episodes_second_line$patientid))
message(glue::glue("The total number of {tumour} second-line patients is {n_second_line}"))
ep_patients_third_line <- drug_episodes %>%
dplyr::filter(tolower(linename) == tolower(treatment), linenumber == 3) %>%
dplyr::pull(patientid) %>%
unique()
drug_episodes_third_line <- drug_episodes %>%
dplyr::filter(patientid %in% ep_patients_third_line &
!(patientid %in% ep_patients_first_line) &
!(patientid %in% ep_patients_second_line))
n_third_line <- length(unique(drug_episodes_third_line$patientid))
message(glue::glue("The total number of {tumour} third-line patients is {n_third_line}"))
summary_table <- data.frame(
Line_of_Therapy = c("First Line", "Second Line", "Third Line"),
Number_of_Patients = c(n_first_line, n_second_line, n_third_line)
)
print(knitr::kable(summary_table, caption = glue::glue("Number of patients who received {treatment} by line of therapy")))
# Combine all selected episodes
drug_episodes <- dplyr::bind_rows(drug_episodes_first_line, drug_episodes_second_line, drug_episodes_third_line)
# Remove overlapping lines
drug_episodes <- collapse_overlapping_lines(ep_data = drug_episodes)
n_overlap <- length(unique(drug_episodes$patientid))
message(glue::glue("The total number of {tumour} patients with overlapping lines that were filtered out is {n_overlap}"))
# Remove single doses
drug_episodes <- single_dose_clean(ep_data = drug_episodes, drug_separator = drug_separator, overlap_threshold = overlap_threshold)
n_single_dose <- length(unique(drug_episodes$patientid))
message(glue::glue("The total number of {tumour} patients with single doses that were filtered out is {n_single_dose}"))
View(drug_episodes)
treatment = "docetaxel, gemcitabine"
chemo_lines <- drug_episodes %>%
dplyr::filter(stringr::str_detect(tolower(linename), treatment))
# Tag chemotherapy line
chemo_lines <- drug_episodes %>%
dplyr::filter(stringr::str_detect(tolower(linename), treatment)) %>%
dplyr::group_by(patientid) %>%
dplyr::summarise(chemo_line = min(linenumber), .groups = "drop") %>%
dplyr::filter(chemo_line %in% c(1, 2, 3))
devtools::load_all()
drug_episodes <- prep_episode_data(tumour = "sarcoma", treatment = "docetaxel, gemcitabine", drug_separator = ",",
overlap_threshold = 1, exact =  FALSE)
devtools::load_all()
devtools::load_all()
drug_episodes <- prep_episode_data(tumour = "sarcoma", treatment = "docetaxel, gemcitabine", drug_separator = ",",
overlap_threshold = 1, exact =  FALSE)
drug_episodes <- prep_episode_data(tumour = "sarcoma", treatment = "docetaxel,gemcitabine", drug_separator = ",",
overlap_threshold = 1, exact =  FALSE)
View(drug_episodes)
drug_transitions <- construct_state_episodes(drug_episodes)$drug_transitions
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "docetaxel,gemcitabine"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, TRUE)
), dir = "H:\\PREDiCText\\nirupama\\weibull_estimates"
)
devtools::install()
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "docetaxel,gemcitabine"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, TRUE)
), dir = "H:\\PREDiCText\\nirupama\\weibull_estimates"
)
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "docetaxel,gemcitabine"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, TRUE)
), dir = "H:\\PREDiCText\\nirupama\\weibull_estimates"
)
library(episodes)
run_episodes_pipeline(
tibble::tibble(
tumour = c("nsclc", "breast", "pancreatic", "thyroid", "crc", "sarcoma"),
treatment = c("cisplatin|carboplatin", "capecitabine", "gemcitabine","cabozantinib", "folfiri", "docetaxel,gemcitabine"),
exact = c(FALSE, TRUE, TRUE, TRUE, TRUE, TRUE)
), dir = "H:\\PREDiCText\\nirupama\\weibull_estimates"
)
